"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[94],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>f});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),c=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return i.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return t?i.createElement(f,o(o({ref:n},u),{},{components:t})):i.createElement(f,o({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=t[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3901:(e,n,t)=>{t.d(n,{Z:()=>o});var i=t(7294),r=t(3743);const a={tableOfContentsInline:"tableOfContentsInline_prmo"};function o(e){let{toc:n,minHeadingLevel:t,maxHeadingLevel:o}=e;return i.createElement("div",{className:a.tableOfContentsInline},i.createElement(r.Z,{toc:n,minHeadingLevel:t,maxHeadingLevel:o,className:"table-of-contents",linkClassName:null}))}},3743:(e,n,t)=>{t.d(n,{Z:()=>f});var i=t(7462),r=t(7294),a=t(6668);function o(e){const n=e.map((e=>({...e,parentIndex:-1,children:[]}))),t=Array(7).fill(-1);n.forEach(((e,n)=>{const i=t.slice(2,e.level);e.parentIndex=Math.max(...i),t[e.level]=n}));const i=[];return n.forEach((e=>{const{parentIndex:t,...r}=e;t>=0?n[t].children.push(r):i.push(r)})),i}function l(e){let{toc:n,minHeadingLevel:t,maxHeadingLevel:i}=e;return n.flatMap((e=>{const n=l({toc:e.children,minHeadingLevel:t,maxHeadingLevel:i});return function(e){return e.level>=t&&e.level<=i}(e)?[{...e,children:n}]:n}))}function s(e){const n=e.getBoundingClientRect();return n.top===n.bottom?s(e.parentNode):n}function c(e,n){let{anchorTopOffset:t}=n;const i=e.find((e=>s(e).top>=t));if(i){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(s(i))?i:e[e.indexOf(i)-1]??null}return e[e.length-1]??null}function u(){const e=(0,r.useRef)(0),{navbar:{hideOnScroll:n}}=(0,a.L)();return(0,r.useEffect)((()=>{e.current=n?0:document.querySelector(".navbar").clientHeight}),[n]),e}function p(e){const n=(0,r.useRef)(void 0),t=u();(0,r.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:i,linkActiveClassName:r,minHeadingLevel:a,maxHeadingLevel:o}=e;function l(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(i),l=function(e){let{minHeadingLevel:n,maxHeadingLevel:t}=e;const i=[];for(let r=n;r<=t;r+=1)i.push(`h${r}.anchor`);return Array.from(document.querySelectorAll(i.join()))}({minHeadingLevel:a,maxHeadingLevel:o}),s=c(l,{anchorTopOffset:t.current}),u=e.find((e=>s&&s.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,t){t?(n.current&&n.current!==e&&n.current.classList.remove(r),e.classList.add(r),n.current=e):e.classList.remove(r)}(e,e===u)}))}return document.addEventListener("scroll",l),document.addEventListener("resize",l),l(),()=>{document.removeEventListener("scroll",l),document.removeEventListener("resize",l)}}),[e,t])}function d(e){let{toc:n,className:t,linkClassName:i,isChild:a}=e;return n.length?r.createElement("ul",{className:a?void 0:t},n.map((e=>r.createElement("li",{key:e.id},r.createElement("a",{href:`#${e.id}`,className:i??void 0,dangerouslySetInnerHTML:{__html:e.value}}),r.createElement(d,{isChild:!0,toc:e.children,className:t,linkClassName:i}))))):null}const m=r.memo(d);function f(e){let{toc:n,className:t="table-of-contents table-of-contents__left-border",linkClassName:s="table-of-contents__link",linkActiveClassName:c,minHeadingLevel:u,maxHeadingLevel:d,...f}=e;const k=(0,a.L)(),g=u??k.tableOfContents.minHeadingLevel,v=d??k.tableOfContents.maxHeadingLevel,h=function(e){let{toc:n,minHeadingLevel:t,maxHeadingLevel:i}=e;return(0,r.useMemo)((()=>l({toc:o(n),minHeadingLevel:t,maxHeadingLevel:i})),[n,t,i])}({toc:n,minHeadingLevel:g,maxHeadingLevel:v});return p((0,r.useMemo)((()=>{if(s&&c)return{linkClassName:s,linkActiveClassName:c,minHeadingLevel:g,maxHeadingLevel:v}}),[s,c,g,v])),r.createElement(m,(0,i.Z)({toc:h,className:t,linkClassName:s},f))}},5608:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var i=t(7462),r=(t(7294),t(3905)),a=t(3901);const o={},l="Quick start guide for iOS",s={unversionedId:"ios_quick_guide",id:"ios_quick_guide",title:"Quick start guide for iOS",description:"This page describes essential information to integrate the NAVER App Tracking SDK into iOS apps. For more information, see How to integrate the SDK.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/ios_quick_guide.md",sourceDirName:".",slug:"/ios_quick_guide",permalink:"/ntracker-sdk-ios/en/ios_quick_guide",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"NAVER App Tracking SDK Integration Guide",permalink:"/ntracker-sdk-ios/en/"},next:{title:"Quick start guide for Android",permalink:"/ntracker-sdk-ios/en/android_quick_guide"}},c={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Install the SDK",id:"install-the-sdk",level:2},{value:"Configure and initialize the SDK",id:"configure-and-initialize-the-sdk",level:2},{value:"Set funnels",id:"set-funnels",level:2},{value:"AppDelegate",id:"appdelegate",level:3},{value:"SceneDelegate",id:"scenedelegate",level:3},{value:"SwiftUI app",id:"swiftui-app",level:3},{value:"Send conversion events",id:"send-conversion-events",level:2}],p={toc:u},d="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(d,(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quick-start-guide-for-ios"},"Quick start guide for iOS"),(0,r.kt)("p",null,"This page describes essential information to integrate the ",(0,r.kt)("strong",{parentName:"p"},"NAVER App Tracking SDK")," into iOS apps. For more information, see ",(0,r.kt)("a",{parentName:"p",href:"how_to_use_sdk/"},"How to integrate the SDK"),"."),(0,r.kt)(a.Z,{toc:u.filter((e=>2===e.level)),mdxType:"TOCInline"}),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"Before you begin, check the following requirements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The SDK supports iOS 10.0 or later."),(0,r.kt)("li",{parentName:"ul"},"To integrate the SDK, you need a \u201csite ID.\u201d For more information, see ",(0,r.kt)("a",{parentName:"li",href:"/ntracker-sdk-ios/en/how_to_use_sdk/get_site_id"},"Get a site ID"),".")),(0,r.kt)("h2",{id:"install-the-sdk"},"Install the SDK"),(0,r.kt)("p",null,"You can install the SDK using CocoaPods."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"pod 'NTrackerSDKExt'\n")),(0,r.kt)("h2",{id:"configure-and-initialize-the-sdk"},"Configure and initialize the SDK"),(0,r.kt)("p",null,"Follow the instructions below to configure and initialize the SDK."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Call the ",(0,r.kt)("inlineCode",{parentName:"li"},"configure")," API in ",(0,r.kt)("inlineCode",{parentName:"li"},"application(_:didFinishLaunchingWithOptions:)")," to initialize the SDK."),(0,r.kt)("li",{parentName:"ul"},"Set whether to display debug logs in the XCode console using the ",(0,r.kt)("inlineCode",{parentName:"li"},"enableDebugLog")," API."),(0,r.kt)("li",{parentName:"ul"},"Set the server environment using ",(0,r.kt)("inlineCode",{parentName:"li"},"phase"),"."),(0,r.kt)("li",{parentName:"ul"},"When you publish your app on the app store, the phase must be set to ",(0,r.kt)("inlineCode",{parentName:"li"},"Release"),", and whether to display logs to ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"class AppDelegate: NSObject, UIApplicationDelegate {\n    func application(_ application: UIApplication,\n                     didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey : Any]? = nil) -> Bool {\n\n    NTrackerExt.enableDebugLog(true)\n    NTrackerExt.configure(serviceID: serviceID, phase: .debug)\n\n    return true\n  }\n}\n")),(0,r.kt)("p",null,"For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/ntracker-sdk-ios/en/how_to_use_sdk/configure_and_initialize"},"Configure and initialize the SDK")," in ",(0,r.kt)("a",{parentName:"p",href:"how_to_use_sdk/"},"How to integrate the SDK"),"."),(0,r.kt)("h2",{id:"set-funnels"},"Set funnels"),(0,r.kt)("p",null,"You can collect funnel data for app conversions that occur through a Universal Link or Custom URL Scheme for more accurate conversion tracking. Follow the instructions below:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Collect funnel data using the ",(0,r.kt)("inlineCode",{parentName:"li"},"setInflow")," API."),(0,r.kt)("li",{parentName:"ul"},"To measure conversion tracking through NAVER Ads, use the ",(0,r.kt)("inlineCode",{parentName:"li"},"setInflow")," API to collect URL information. If you use a deep link provided by a third party\u2019s tracker, you need to pass the URL information as it is using the ",(0,r.kt)("inlineCode",{parentName:"li"},"setInflow")," API before it is processed by the tracker.")),(0,r.kt)("p",null,"Depending on whether you use AppDelegate or SceneDelegate, the implementation code is different. For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/ntracker-sdk-ios/en/how_to_use_sdk/set_inflow_url"},"Set funnels")," in ",(0,r.kt)("a",{parentName:"p",href:"how_to_use_sdk/"},"How to integrate the SDK"),"."),(0,r.kt)("h3",{id:"appdelegate"},"AppDelegate"),(0,r.kt)("p",null,"With AppDelegate, the code should be as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"class AppDelegate: UIResponder, UIApplicationDelegate {\n\n    func application(_ application: UIApplication,\n                     continue userActivity: NSUserActivity,\n                     restorationHandler: @escaping ([UIUserActivityRestoring]?) -> Void) -> Bool {\n        // Universal Link URL\n        if userActivity.activityType == NSUserActivityTypeBrowsingWeb,\n           let urlUniversalLink = userActivity.webpageURL {\n            NTrackerExt.setInflow(url: urlUniversalLink)\n        }\n\n        // Your Codes.\n    }\n\n    func application(_ app: UIApplication,\n                     open url: URL,\n                     options: [UIApplication.OpenURLOptionsKey : Any] = [:]) -> Bool {\n        // Custom URL Scheme\n        NTrackerExt.setInflow(url: url)\n\n        // Your Codes.\n    }\n    \n}\n")),(0,r.kt)("h3",{id:"scenedelegate"},"SceneDelegate"),(0,r.kt)("p",null,"With SceneDelegate, the implementation code should be as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"class SceneDelegate: UIResponder, UIWindowSceneDelegate {\n\n    func scene(_ scene: UIScene, \n               willConnectTo session: UISceneSession, \n               options connectionOptions: UIScene.ConnectionOptions) {\n        // Universal Link URL. App is not running\n        if let urlUniversalLink = connectionOptions.userActivities.first?.webpageURL {\n            NTrackerExt.setInflow(url: urlUniversalLink)\n        }\n\n        // Custom URL Scheme. App is not running\n        if let urlCustomScheme = connectionOptions.urlContexts.first?.url {\n            NTrackerExt.setInflow(url: urlCustomScheme)\n        }\n\n        // Your Codes.\n    }\n\n    func scene(_ scene: UIScene, \n               continue userActivity: NSUserActivity) {\n        // Universal Link URL. App is running or suspended in memory\n        if userActivity.activityType == NSUserActivityTypeBrowsingWeb,\n           let urlUniversalLink = userActivity.webpageURL {\n            NTrackerExt.setInflow(url: urlUniversalLink)\n        }\n\n        // Your Codes.\n}\n\n    func scene(_ scene: UIScene, \n               openURLContexts URLContexts: Set<UIOpenURLContext>) {\n        // Custom URL Scheme. App is running or suspended in memory\n        if let urlCustomScheme = URLContexts.first?.url {\n            NTrackerExt.setInflow(url: urlCustomScheme)\n        }\n\n        // Your Codes.\n    }\n\n}\n")),(0,r.kt)("h3",{id:"swiftui-app"},"SwiftUI app"),(0,r.kt)("p",null,"In a SwiftUI app, the code should be as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"@main\nstruct SampleApp: App {\n    \n    var body: some Scene {\n        WindowGroup {\n            ContentView()\n                .onOpenURL { url in\n                    NTrackerExt.setInflow(url: url)\n                }\n        }\n    }\n    \n}\n")),(0,r.kt)("h2",{id:"send-conversion-events"},"Send conversion events"),(0,r.kt)("p",null,"The SDK collects various conversion events."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The \u201cApp installed\u201d and \u201cApp launched\u201d events are automatically collected."),(0,r.kt)("li",{parentName:"ul"},"The \u201cPurchase completed\u201d event is collected using ",(0,r.kt)("inlineCode",{parentName:"li"},"trackPurchaseEvent"),", and the \u201cIn-app purchase completed\u201d event using ",(0,r.kt)("inlineCode",{parentName:"li"},"trackInAppPurchaseEvent"),"."),(0,r.kt)("li",{parentName:"ul"},"Other general events are collected using ",(0,r.kt)("inlineCode",{parentName:"li"},"trackConversionEvent"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},'// Add currency information to \u201cext1\u201d. \u201cKRW\u201d can be omitted.\nlet items = [\n    NTrackerConversionItem(quantity: 1, payAmount: 100, id: "id1", ext1: "KRW"),\n    NTrackerConversionItem(quantity: 2, payAmount: 400, id: "id2", ext1: "KRW"),\n    NTrackerConversionItem(quantity: 3, payAmount: 900, id: "id3", ext1: "KRW")\n]\n\n// When passing both the conversion value and purchased items\nNTrackerExt.trackPurchaseEvent(value: 1_400, items: items)\n')),(0,r.kt)("p",null,"The general event names are defined in ",(0,r.kt)("inlineCode",{parentName:"p"},"NTrackerConversionEvent"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-swift"},"NTrackerExt.trackConversionEvent(NTrackerConversionEvent.Subscribe, value: 1_000)\n")),(0,r.kt)("p",null,"For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/ntracker-sdk-ios/en/how_to_use_sdk/send_events"},"Send conversion events")," in ",(0,r.kt)("a",{parentName:"p",href:"how_to_use_sdk/"},"How to integrate the SDK"),"."))}m.isMDXComponent=!0}}]);